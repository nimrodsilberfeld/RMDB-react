{"version":3,"sources":["components/images/reactMovie_logo.png","components/images/tmdb_logo.svg","components/styles/StyledHeader.js","components/elements/Header.js","config.js","components/styles/StyledGrid.js","components/elements/Grid.js","components/styles/StyledHeroImage.js","components/elements/HeroImage.js","components/styles/StyledLoadMoreBtn.js","components/elements/LoadMoreBtn.js","components/styles/StyledMovieThumb.js","components/elements/MovieThumb.js","components/styles/StyledSearchBar.js","components/elements/SearchBar.js","components/styles/StyledSpinner.js","components/elements/Spinner.js","components/Home.js","components/hookes/useHomeFetch.js","components/styles/GlobalStyle.js","components/styles/StyledNavigation.js","components/elements/Navigation.js","components/styles/StyledMovieInfo.js","components/elements/MovieInfo.js","components/styles/StyledActor.js","components/elements/Actors.js","helpers.js","components/styles/StyledMovieInfoBar.js","components/elements/MovieInfoBar.js","components/Movie.js","components/hookes/useMovieFetch.js","components/NotFound.js","components/App.js","index.js","components/images/no_image.jpg"],"names":["module","exports","StyledHeader","styled","div","StyledRMDBLogo","img","StyledTMDBLogo","Header","className","to","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","SEARCH_BASE_URL","POPLAR_BASE_URL","IMAGE_BASE_URL","StyledGrid","StyledGridContent","Grid","header","children","StyledHeroImage","props","image","HeroImage","title","text","StyledLoadMoreBtn","button","LoadMoreBtn","callback","type","onClick","StyledMovieThumb","MovieThumb","movieId","clickable","StyledSearchBar","StyledSearchBarContent","SearchBar","useState","state","setstate","timeOut","useRef","name","size","placeholder","onChange","event","value","target","clearTimeout","current","setTimeout","StyledSpinner","Spinner","Home","SearchTerm","setSearchTerm","movies","loading","setLoading","error","setError","fetchMovies","endpoint","a","async","isLoadMore","search","fetch","json","result","prev","results","currentPage","page","totalPages","total_pages","console","log","useEffect","sessionStorage","homeState","JSON","parse","setItem","stringify","useHomeFetch","backdrop_path","original_title","overview","map","movie","key","id","poster_path","NoImage","movieName","SearchEndpoint","PopularEndPoint","GlobalStyle","createGlobalStyle","StyledNavigation","Navigation","StyledMovieInfo","backdrop","MovieInfo","vote_average","directors","length","element","credit_id","StyledActor","Actors","actor","profile_path","character","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","StyledMovieInfoBar","MovieInfoBar","time","budget","revenue","hours","Math","floor","mins","calcTime","Movie","fetchData","useCallback","creditsEndpoint","creditsReults","crew","filter","member","job","actors","cast","localStorage","useMovieFetch","runtime","NotFound","App","path","default","ReactDOM","render","document","getElementById"],"mappings":"kHAAAA,EAAOC,QAAU,IAA0B,6C,mBCA3CD,EAAOC,QAAU,IAA0B,uC,q+BCEpC,IAAMC,EAAeC,IAAOC,IAAV,KAmBZC,EAAiBF,IAAOG,IAAV,KAUdC,EAAiBJ,IAAOG,IAAV,K,OCdZE,EAXA,kBACX,kBAACN,EAAD,KACI,yBAAKO,UAAU,kBACX,kBAAC,IAAD,CAAMC,GAAG,KACL,kBAACL,EAAD,CAAgBM,IAAKC,IAAUC,IAAI,eAEvC,kBAACN,EAAD,CAAgBI,IAAKG,IAAUD,IAAI,iB,OCRzCE,EAAU,gCACVC,EAAU,mCACVC,EAAe,UAAMF,EAAN,gCAAqCC,EAArC,WACfE,EAAe,UAAMH,EAAN,iCAAsCC,GACrDG,EAAiB,6B,iiCCNhB,IAAMC,EAAajB,IAAOC,IAAV,KAcViB,EAAoBlB,IAAOC,IAAV,KCJfkB,EAPF,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,SAAX,OACT,kBAACJ,EAAD,KACI,4BAAKG,GACL,kBAACF,EAAD,KAAoBG,K,kuCCNrB,IAAMC,EAAkBtB,IAAOC,IAAV,KACZ,SAAAsB,GAAK,oJAOVA,EAAMC,MAPI,kBCaNC,EAXG,SAAC,GAAD,IAAGD,EAAH,EAAGA,MAAOE,EAAV,EAAUA,MAAOC,EAAjB,EAAiBA,KAAjB,OACd,kBAACL,EAAD,CAAiBE,MAAOA,GACpB,yBAAKlB,UAAU,qBACX,yBAAKA,UAAU,kBACX,4BAAKoB,GACL,2BAAIC,O,yaCRb,IAAMC,EAAoB5B,IAAO6B,OAAV,KCSfC,EAPK,SAAC,GAAD,IAAGH,EAAH,EAAGA,KAAMI,EAAT,EAASA,SAAT,OAChB,kBAACH,EAAD,CAAmBI,KAAK,SAASC,QAASF,GACrCJ,I,+nBCJF,IAAMO,EAAmBlC,IAAOC,IAAV,KCedkC,EAbI,SAAC,GAAD,IAAGX,EAAH,EAAGA,MAAOY,EAAV,EAAUA,QAASC,EAAnB,EAAmBA,UAAnB,OAEf,kBAACH,EAAD,KACKG,EACG,kBAAC,IAAD,CAAM9B,GAAE,WAAM6B,IACd,yBAAK9B,UAAU,YAAYE,IAAKgB,EAAOd,IAAI,gBAGvC,yBAAKF,IAAKgB,EAAOd,IAAI,iB,29BCV9B,IAAM4B,EAAkBtC,IAAOC,IAAV,KASfsC,EAAyBvC,IAAOC,IAAV,KCqBpBuC,EA1BG,SAAC,GAAkB,IAAhBT,EAAe,EAAfA,SAAe,EAENU,mBAAS,IAFH,mBAEzBC,EAFyB,KAElBC,EAFkB,KAG1BC,EAAUC,iBAAO,MAYvB,OACI,kBAAEP,EAAF,KACI,kBAACC,EAAD,KACI,kBAAC,IAAD,CAAajC,UAAU,YAAYwC,KAAK,SAASC,KAAK,OACtD,2BAAOf,KAAK,OAAOgB,YAAY,eAAeC,SAdzC,SAAAC,GAAU,IACfC,EAAUD,EAAME,OAAhBD,MACRE,aAAaT,EAAQU,SACrBX,EAASQ,GAETP,EAAQU,QAAUC,YAAW,WACzBxB,EAASoB,KACV,MAOuEA,MAAOT,O,4ZCvBlF,IAAMc,EAAgBxD,IAAOC,IAAV,KCIXwD,EAFC,kBAAM,kBAACD,EAAD,O,oDC+DPE,GApDF,WAAO,IAAD,EACqBjB,mBAAS,IAD9B,mBACRkB,EADQ,KACIC,EADJ,OCZS,SAACD,GAAgB,IAAD,EACdlB,mBAAS,CAAEoB,OAAQ,KADL,mBACjCnB,EADiC,KAC1BC,EAD0B,OAEVF,oBAAS,GAFC,mBAEjCqB,EAFiC,KAExBC,EAFwB,OAGdtB,oBAAS,GAHK,mBAGjCuB,EAHiC,KAG1BC,EAH0B,KAOlCC,EAAc,SAAMC,GAAN,iBAAAC,EAAAC,OAAA,uDAChBJ,GAAS,GACTF,GAAW,GAELO,EAAaH,EAASI,OAAO,QAJnB,gBAAAH,EAAA,WAAAA,EAAA,MAOgBI,MAAML,IAPtB,0BAOiCM,OAPjC,6CAONC,EAPM,OAQZ/B,GAAS,SAAAgC,GAAI,uBACNA,EADM,CAETd,QACoB,IAAhBS,EAAA,sBACUK,EAAKd,QADf,YAC0Ba,EAAOE,UADjC,YAEUF,EAAOE,SACrBnD,UAAWkD,EAAKlD,WAAaiD,EAAOE,QAAQ,GAC5CC,YAAaH,EAAOI,KACpBC,WAAYL,EAAOM,iBAhBX,kDAoBZf,GAAS,GACTgB,QAAQC,IAAR,MArBY,0DAwCpB,OAhBAC,qBAAU,WACFC,eAAeC,WACfJ,QAAQC,IAAI,mBACZvC,EAAS2C,KAAKC,MAAMH,eAAeC,YACnCtB,GAAW,KAEXkB,QAAQC,IAAI,eACZhB,EAAY,GAAD,OAAInD,OAEpB,IACHoE,qBAAU,WACDxB,IACDsB,QAAQC,IAAI,8BACZE,eAAeI,QAAQ,YAAaF,KAAKG,UAAU/C,OAExD,CAACiB,EAAYjB,IACT,CAAC,CAAEA,QAAOsB,QAAOF,WAAWI,GDjCcwB,CAAa/B,GAF/C,0BAENjB,EAFM,EAENA,MAAgBsB,GAFV,EAECF,QAFD,EAEUE,OAASE,EAFnB,KAmBf,OAAIF,EAAc,yDACbtB,EAAMmB,OAAO,GAGd,qCACMF,GACE,kBAAC,EAAD,CAAWnC,MAAK,UAAKR,GAAL,Ob9BV,Sa8BU,OAAsC0B,EAAMjB,UAAUkE,eAClEjE,MAAOgB,EAAMjB,UAAUmE,eACvBjE,KAAMe,EAAMjB,UAAUoE,WAE9B,kBAAC,EAAD,CAAW9D,SAzBE,SAAAwC,GACjB,IAAMJ,EAAWI,EAASzD,EAAkByD,EAASxD,EACrD6C,EAAcW,GACdL,EAAYC,MAuBR,kBAAC,EAAD,CAAM/C,OAAQuC,EAAa,eAAiB,kBACvCjB,EAAMmB,OAAOiC,KAAI,SAAAC,GAAK,OACnB,kBAAC,EAAD,CACIC,IAAKD,EAAME,GACX5D,WAAS,EACTb,MACIuE,EAAMG,YAAN,UACOlF,GADP,ObzCN,SayCM,OACwC+E,EAAMG,aACxCC,KAEV/D,QAAS2D,EAAME,GACfG,UAAWL,EAAMH,qBAI5BlD,EAAMoB,SAAW,kBAAC,EAAD,MACjBpB,EAAMmC,YAAcnC,EAAMqC,aAAgBrC,EAAMoB,SAC7C,kBAAC,EAAD,CAAanC,KAAM,YAAaI,SArCrB,WACnB,IAAMsE,EAAc,UAAMvF,GAAN,OAAwB6C,EAAxB,iBAA2CjB,EAAMmC,YAAc,GAC7EyB,EAAe,UAAMvF,EAAN,iBAA8B2B,EAAMmC,YAAc,GAIvEX,EAFiBP,EAAa0C,EAAiBC,OAMtB,kBAAC,EAAD,O,sJEjC1B,IAAMC,GAAcC,YAAH,M,wjBCAjB,IAAMC,GAAmBzG,IAAOC,IAAV,MCmBdyG,GAjBI,SAAC,GAAD,IAAGX,EAAH,EAAGA,MAAH,OAEX,kBAACU,GAAD,KACI,yBAAKnG,UAAU,sBACX,kBAAC,IAAD,CAAMC,GAAG,KACL,oCAEJ,gCACA,2BAAIwF,M,kuDCTb,IAAMY,GAAkB3G,IAAOC,IAAV,MACZ,SAAAsB,GAAK,OACjBA,EAAMqF,SAAN,eACY5F,GADZ,OlBKkB,SkBLlB,OAC6CO,EAAMqF,SADnD,MAEI,UCoCOC,GApCG,SAAC,GAAD,IAAGd,EAAH,EAAGA,MAAH,OACd,kBAACY,GAAD,CAAiBC,SAAUb,EAAMJ,eAC7B,yBAAKrF,UAAU,qBACX,yBAAKA,UAAU,mBACX,kBAAC,EAAD,CACIkB,MACIuE,EAAMG,YAAN,UACSlF,GADT,OnBDJ,QmBCI,OACwC+E,EAAMG,aACxCC,KAEV9D,WAAW,KAGnB,yBAAK/B,UAAU,kBACX,4BAAKyF,EAAMrE,OACX,oCACA,2BAAIqE,EAAMF,UAEV,yBAAKvF,UAAU,mBACX,6BACI,2CACA,yBAAKA,UAAU,SAASyF,EAAMe,eAGlC,yBAAKxG,UAAU,YACX,uCAAayF,EAAMgB,UAAUC,OAAS,EAAI,IAAM,IAC/CjB,EAAMgB,UAAUjB,KAAI,SAAAmB,GAAO,OACxB,uBAAGjB,IAAKiB,EAAQC,WAAYD,EAAQnE,e,+gBChCzD,IAAMqE,GAAcnH,IAAOC,IAAV,MCiBTmH,GAdA,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACX,kBAACF,GAAD,KACI,yBAAK3G,IACD6G,EAAMC,aAAN,UACStG,GADT,OrBIQ,QqBJR,OACwCqG,EAAMC,cACxCnB,KAENzF,IAAI,eAER,0BAAMJ,UAAU,cAAc+G,EAAMvE,KAApC,KACA,0BAAMxC,UAAU,mBAAmB+G,EAAME,aCRpCC,GAAe,SAAAC,GAM1B,OALkB,IAAIC,KAAKC,aAAa,QAAS,CAC/CC,MAAO,WACPC,SAAU,MACVC,sBAAuB,IAERC,OAAON,I,m8BCXnB,IAAMO,GAAqBhI,IAAOC,IAAV,MCoChBgI,GA/BM,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,QAAjB,OAEjB,kBAACJ,GAAD,KACI,yBAAK1H,UAAU,wBACX,yBAAKA,UAAU,4BACX,kBAAC,IAAD,CAAaA,UAAU,UAAUwC,KAAK,UAAUC,KAAK,OACrD,0BAAMzC,UAAU,qBAAhB,gBFZQ,SAAA4H,GACtB,IAAMG,EAAQC,KAAKC,MAAML,EAAO,IAC1BM,EAAON,EAAO,GACpB,MAAM,GAAN,OAAUG,EAAV,aAAoBG,EAApB,KEUgCC,CAASP,KAI/B,yBAAK5H,UAAU,4BACX,kBAAC,IAAD,CAAaA,UAAU,YAAYwC,KAAK,QAAQC,KAAK,OACrD,0BAAMzC,UAAU,qBAAhB,UACYkH,GAAaW,KAI7B,yBAAK7H,UAAU,4BACX,kBAAC,IAAD,CAAaA,UAAU,aAAawC,KAAK,SAASC,KAAK,OACvD,0BAAMzC,UAAU,qBAAhB,WACakH,GAAaY,QCa3BM,GA7BD,SAAC,GAAiB,IAAD,ECTF,SAAAtG,GAAY,IAAD,EACVK,mBAAS,IADC,mBAC7BC,EAD6B,KACtBC,EADsB,OAENF,oBAAS,GAFH,mBAE7BqB,EAF6B,KAEpBC,EAFoB,OAGVtB,oBAAS,GAHC,mBAG7BuB,EAH6B,KAGtBC,EAHsB,KAK9B0E,EAAYC,uBAAY,kCAAAxE,EAAAC,OAAA,uDAC1BJ,GAAS,GACTF,GAAW,GAFe,SAIhBI,EAJgB,UAIFvD,EAJE,iBAIcwB,EAJd,oBAIiCvB,GAJjC,OAAAuD,EAAA,WAAAA,EAAA,MAKMI,MAAML,IALZ,0BAKuBM,OALvB,oDAKhBC,EALgB,OAMhBmE,EANgB,UAMKjI,EANL,iBAMqBwB,EANrB,4BAMgDvB,GANhD,OAAAuD,EAAA,YAAAA,EAAA,MAOaI,MAAMqE,IAPnB,2BAOqCpE,OAPrC,6CAOhBqE,EAPgB,OAQhB/B,EAAY+B,EAAcC,KAAKC,QAAO,SAAAC,GAAM,MAAmB,aAAfA,EAAOC,OAC7DvG,EAAS,gBACF+B,EADC,CAEJyE,OAAQL,EAAcM,KACtBrC,eAZkB,kDAiBtB9C,GAAS,GACTgB,QAAQC,IAAR,MAlBsB,QAoB1BnB,GAAW,GApBe,2DAqB3B,CAAC3B,IAeJ,OAdA+C,qBAAU,WACFkE,aAAajH,IACb6C,QAAQC,IAAI,cACZvC,EAAS2C,KAAKC,MAAM8D,aAAajH,KACjC2B,GAAW,KAEXkB,QAAQC,IAAI,YACZyD,OAGL,CAACA,EAAWvG,IACf+C,qBAAU,WACNkE,aAAa7D,QAAQpD,EAASkD,KAAKG,UAAU/C,MAC9C,CAACN,EAASM,IACN,CAACA,EAAOoB,EAASE,GD9BQsF,CAFL,EAAdlH,SAAc,mBAEpB2D,EAFoB,KAEbjC,EAFa,KAEJE,EAFI,KAI3B,OADAiB,QAAQC,IAAIa,GACR/B,EAAc,+DAEdF,EAAgB,kBAAC,EAAD,MAEhB,oCACI,kBAAC,GAAD,CAAYiC,MAAOA,EAAMH,iBACzB,kBAAC,GAAD,CAAWG,MAAOA,IAClB,kBAAC,GAAD,CACImC,KAAMnC,EAAMwD,QACZpB,OAAQpC,EAAMoC,OACdC,QAASrC,EAAMqC,UAEnB,kBAAC,EAAD,CAAMhH,OAAO,UACR2E,EAAMoD,OAAOrD,KAAI,SAAAuB,GAAK,OACnB,kBAAC,GAAD,CACArB,IAAKqB,EAAMH,UACXG,MAAOA,UE5BZmC,GAFE,kBAAM,iECiBRC,GAXH,kBACR,6BACI,kBAAC,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,GAAD,CAAMC,KAAK,MACX,kBAAC,GAAD,CAAOA,KAAK,cACZ,kBAAC,GAAD,CAAUC,SAAO,KAErB,kBAACpD,GAAD,QCZRqD,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,U,kBCJjDlK,EAAOC,QAAU,IAA0B,uC","file":"static/js/main.a0731206.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/reactMovie_logo.08494abf.png\";","module.exports = __webpack_public_path__ + \"static/media/tmdb_logo.30cd724b.svg\";","import styled from 'styled-components';\n\nexport const StyledHeader = styled.div`\n  background: #1c1c1c;\n  padding: 0 20px;\n  box-sizing: border-box;\n\n  .header-content {\n    max-width: 1280px;\n    min-height: 120px;\n    padding: 20px 0px;\n    margin: 0 auto;\n    box-sizing: border-box;\n\n    @media screen and (max-width: 500px) {\n      max-width: 1280px;\n      min-height: 0px;\n    }\n  }\n`;\n\nexport const StyledRMDBLogo = styled.img`\n  width: 250px;\n  margin-top: 20px;\n\n  @media screen and (max-width: 500px) {\n    width: 150px;\n    margin-top: 5px;\n  }\n`;\n\nexport const StyledTMDBLogo = styled.img`\n  width: 122px;\n  margin-top: 25px;\n  float: right;\n\n  @media screen and (max-width: 500px) {\n    display: inline-block;\n    width: 80px;\n    margin-top: 0px;\n  }\n`;\n","import React from \"react\"\r\nimport RMDBLogo from '../images/reactMovie_logo.png'\r\nimport TMDBLogo from '../images/tmdb_logo.svg'\r\nimport { StyledHeader, StyledRMDBLogo, StyledTMDBLogo } from \"../styles/StyledHeader\"\r\nimport { Link } from \"@reach/router\"\r\n\r\nconst Header = () => (\r\n    <StyledHeader>\r\n        <div className=\"header-content\">\r\n            <Link to=\"/\">\r\n                <StyledRMDBLogo src={RMDBLogo} alt=\"rmdb-logo\" />\r\n            </Link>\r\n            <StyledTMDBLogo src={TMDBLogo} alt=\"tmdb-logo\" />\r\n        </div>\r\n    </StyledHeader>\r\n)\r\n\r\nexport default Header\r\n","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '85784741d0a22fe5066f5f98e6c9e6f5';\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&query=`\nconst POPLAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}`\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\nexport {\n    SEARCH_BASE_URL,\n    POPLAR_BASE_URL,\n    API_URL, API_KEY,\n    IMAGE_BASE_URL,\n    BACKDROP_SIZE,\n    POSTER_SIZE\n};\n","import styled from 'styled-components';\n\nexport const StyledGrid = styled.div`\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 0 20px;\n  h1 {\n    font-family: 'Abel', sans-serif;\n    font-size: 42px;\n\n    @media screen and (max-width: 768px) {\n      font-size: 22px;\n    }\n  }\n`;\n\nexport const StyledGridContent = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, minmax(100px, 1fr));\n  grid-gap: 40px;\n  position: relative;\n\n  .grid-element {\n    animation: animateGrid 0.5s;\n  }\n\n  @keyframes animateGrid {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n\n  @media screen and (max-width: 1024px) {\n    grid-template-columns: repeat(4, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 768px) {\n    grid-template-columns: repeat(3, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 600px) {\n    grid-template-columns: repeat(2, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 375px) {\n    grid-template-columns: repeat(1, 1fr);\n  }\n`;\n","import React from \"react\"\r\nimport { StyledGrid, StyledGridContent } from \"../styles/StyledGrid\"\r\n\r\n\r\n\r\nconst Grid = ({ header, children }) => (\r\n    <StyledGrid>\r\n        <h1>{header}</h1>\r\n        <StyledGridContent>{children}</StyledGridContent>\r\n    </StyledGrid>\r\n)\r\n\r\nexport default Grid\r\n","import styled from 'styled-components';\n\nexport const StyledHeroImage = styled.div`\n  background: ${props =>\n    `linear-gradient(\n      to bottom, rgba(0,0,0,0)\n      39%,rgba(0,0,0,0)\n      41%,rgba(0,0,0,0.65)\n      100%\n    ),\n    url('${props.image}'), #1c1c1c`};\n  background-size: 100%, cover !important;\n  background-position: center, center !important;\n  width: 100%;\n  height: 600px;\n  position: relative;\n  animation: animateHeroimage 1s;\n\n  .heroimage-content {\n    max-width: 1280px;\n    padding: 20px;\n    margin: 0 auto;\n  }\n\n  .heroimage-text {\n    z-index: 100;\n    max-width: 700px;\n    position: absolute;\n    bottom: 40px;\n    margin-right: 20px;\n    min-height: 100px;\n    background: rgba(0, 0, 0, 0);\n    color: #fff;\n\n    h1 {\n      font-family: 'Abel', sans-serif;\n      font-size: 48px;\n      color: #fff;\n\n      @media screen and (max-width: 720px) {\n        font-size: 38px;\n        color: #fff;\n      }\n    }\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 22px;\n      line-height: 26px;\n      color: #fff;\n\n      @media screen and (max-width: 720px) {\n        font-size: 16px;\n        line-height: 20px;\n        color: #fff;\n      }\n    }\n\n    @media screen and (max-width: 720px) {\n      max-width: 100%;\n    }\n  }\n\n  @keyframes animateHeroimage {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","import React from \"react\"\r\nimport {StyledHeroImage} from '../styles/StyledHeroImage'\r\n\r\n\r\n\r\nconst HeroImage = ({ image, title, text }) => (\r\n    <StyledHeroImage image={image}>\r\n        <div className=\"Heroimage-content\">\r\n            <div className=\"heroimage-text\">\r\n                <h1>{title}</h1>\r\n                <p>{text}</p>\r\n            </div>\r\n        </div>\r\n    </StyledHeroImage>\r\n)\r\n\r\nexport default HeroImage\r\n","import styled from 'styled-components';\n\nexport const StyledLoadMoreBtn = styled.button`\n  background: #000;\n  width: 25%;\n  min-width: 200px;\n  height: 70px;\n  color: #fff;\n  cursor: pointer;\n  transition: all 0.3s;\n  border-radius: 40px;\n  font-family: 'Abel', sans-serif;\n  font-size: 28px;\n  max-width: 1280px;\n  display: block;\n  margin: 20px auto;\n  padding: 0 20px;\n  outline: none;\n\n  :hover {\n    opacity: 0.8;\n  }\n`;\n","import React from \"react\"\r\nimport { StyledLoadMoreBtn } from \"../styles/StyledLoadMoreBtn\"\r\n\r\n\r\nconst LoadMoreBtn = ({ text, callback }) => (\r\n    <StyledLoadMoreBtn type=\"button\" onClick={callback}>\r\n        {text}\r\n\r\n    </StyledLoadMoreBtn>\r\n)\r\n\r\nexport default LoadMoreBtn\r\n","import styled from 'styled-components';\n\nexport const StyledMovieThumb = styled.div`\n  img {\n    width: 100%;\n    height: auto;\n    /* max-height: 350px; */\n    transition: all 0.3s;\n    object-fit: cover;\n    border-radius: 20px;\n\n    :hover {\n      opacity: 0.8;\n    }\n\n    /* @media screen and (max-width: 1024px) {\n      height: 300px;\n    }\n\n    @media screen and (max-width: 768px) {\n      height: 350px;\n    }\n\n    @media screen and (max-width: 600px) {\n      max-height: 300px;\n    }\n\n    @media screen and (max-width: 375px) {\n      max-height: 450px;\n    } */\n\n    .clickable {\n      cursor: pointer;\n    }\n  }\n`;\n","import React from \"react\"\r\nimport { StyledMovieThumb } from '../styles/StyledMovieThumb'\r\nimport {Link} from \"@reach/router\"\r\n\r\nconst MovieThumb = ({ image, movieId, clickable }) =>\r\n (\r\n    <StyledMovieThumb>\r\n        {clickable ? (\r\n            <Link to={`/${movieId}`}>\r\n            <img className=\"clickable\" src={image} alt='moviethumb' />\r\n            </Link>\r\n          )  : (\r\n                <img src={image} alt='moviethumb' />\r\n            )}\r\n    </StyledMovieThumb>\r\n)\r\n\r\nexport default MovieThumb\r\n","import styled from 'styled-components';\n\nexport const StyledSearchBar = styled.div`\n  width: 100%;\n  height: 105px;\n  background: #1c1c1c;\n  padding: 25px 20px 0px 20px;\n  box-sizing: border-box;\n  color: #fff;\n`;\n\nexport const StyledSearchBarContent = styled.div`\n  max-width: 1280px;\n  width: 100%;\n  height: 55px;\n  background: #353535;\n  margin: 0 auto;\n  border-radius: 40px;\n  position: relative;\n  color: #fff;\n\n  .fa-search {\n    position: absolute;\n    left: 20px;\n    top: 12px;\n    color: #fff;\n    z-index: 1000;\n  }\n\n  input {\n    font-family: 'Abel', sans-serif;\n    font-size: 28px;\n    position: absolute;\n    left: 0px;\n    margin: 8px 0;\n    padding: 0 0 0 60px;\n    border: 0;\n    width: 95%;\n    background: transparent;\n    height: 40px;\n    color: #fff;\n    box-sizing: border-box;\n\n    :focus {\n      outline: none;\n    }\n\n    @media screen and (max-width: 720px) {\n      font-size: 28px;\n    }\n  }\n`;\n","import React, { useState, useRef } from \"react\"\r\nimport FontAwesome from \"react-fontawesome\"\r\n\r\nimport { StyledSearchBar, StyledSearchBarContent } from \"../styles/StyledSearchBar\"\r\n\r\n\r\nconst SearchBar = ({ callback }) => {\r\n\r\n    const [state, setstate] = useState('')\r\n    const timeOut = useRef(null)\r\n\r\n    const doSearch = event => {\r\n        const { value } = event.target\r\n        clearTimeout(timeOut.current)\r\n        setstate(value);\r\n\r\n        timeOut.current = setTimeout(() => {\r\n            callback(value);\r\n        }, 500)\r\n    }\r\n\r\n    return (\r\n        < StyledSearchBar >\r\n            <StyledSearchBarContent>\r\n                <FontAwesome className=\"fa-search\" name=\"search\" size=\"2x\"></FontAwesome>\r\n                <input type=\"text\" placeholder=\"Search Movie\" onChange={doSearch} value={state} />\r\n            </StyledSearchBarContent>\r\n        </StyledSearchBar >\r\n    )\r\n\r\n}\r\n\r\nexport default SearchBar\r\n","import styled from 'styled-components';\n\nexport const StyledSpinner = styled.div`\n  border: 5px solid #f3f3f3; /* Light grey */\n  border-top: 5px solid #16d47b; /* Blue */\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  animation: spin 0.8s linear infinite;\n  margin: 20px auto;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import React from \"react\"\r\nimport {StyledSpinner} from \"../styles/StyledSpinner\"\r\n\r\n\r\nconst Spinner = () => <StyledSpinner />\r\n\r\nexport default Spinner\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { POPLAR_BASE_URL, SEARCH_BASE_URL, API_URL, API_KEY, API_BASE_URL, POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from \"../config\"\r\n\r\nimport Grid from './elements/Grid'\r\nimport HeroImage from \"./elements/HeroImage\"\r\nimport LoadMoreBtn from \"./elements/LoadMoreBtn\"\r\nimport MovieThumb from \"./elements/MovieThumb\"\r\nimport SearchBar from \"./elements/SearchBar\"\r\nimport Spinner from \"./elements/Spinner\"\r\nimport Header from \"./elements/Header\"\r\n\r\n//costune hookes\r\nimport { useHomeFetch } from './hookes/useHomeFetch'\r\nimport NoImage from './images/no_image.jpg'\r\n\r\nconst Home = () => {\r\n    const [SearchTerm, setSearchTerm] = useState('')\r\n    const [{ state, loading, error }, fetchMovies] = useHomeFetch(SearchTerm);\r\n\r\n    const SearchMovies = search => {\r\n        const endpoint = search ? SEARCH_BASE_URL + search : POPLAR_BASE_URL\r\n        setSearchTerm(search)\r\n        fetchMovies(endpoint)\r\n    }\r\n\r\n    const LoadMoreMovies = () => {\r\n        const SearchEndpoint = `${SEARCH_BASE_URL}${SearchTerm}&page=${state.currentPage + 1}`\r\n        const PopularEndPoint = `${POPLAR_BASE_URL}&page=${state.currentPage + 1}`\r\n\r\n        const endpoint = SearchTerm ? SearchEndpoint : PopularEndPoint;\r\n\r\n        fetchMovies(endpoint)\r\n    }\r\n\r\n    if (error) return <div>Something went wrong ...</div>;\r\n    if (!state.movies[0]) return <Spinner />;\r\n\r\n    return (\r\n        <>\r\n            {!SearchTerm && (\r\n                <HeroImage image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.HeroImage.backdrop_path}`}\r\n                    title={state.HeroImage.original_title}\r\n                    text={state.HeroImage.overview}\r\n                />)}\r\n            <SearchBar callback={SearchMovies} />\r\n            <Grid header={SearchTerm ? 'Serch Result' : 'Popular Movies'}>\r\n                {state.movies.map(movie => (\r\n                    <MovieThumb\r\n                        key={movie.id}\r\n                        clickable\r\n                        image={\r\n                            movie.poster_path ?\r\n                                `${IMAGE_BASE_URL}${BACKDROP_SIZE}${movie.poster_path}`\r\n                                : NoImage\r\n                        }\r\n                        movieId={movie.id}\r\n                        movieName={movie.original_title}\r\n                    />\r\n                ))}\r\n            </Grid>\r\n            {state.loading && <Spinner />}\r\n            {state.currentPage < state.totalPages && !(state.loading) && (\r\n                <LoadMoreBtn text={'Load More'} callback={LoadMoreMovies} />\r\n            )}\r\n        </>\r\n    )\r\n}\r\nexport default Home \r\n","import { useState, useEffect } from \"react\"\r\nimport { POPLAR_BASE_URL } from \"../../config\"\r\n\r\nexport const useHomeFetch = (SearchTerm) => {\r\n    const [state, setstate] = useState({ movies: [] })\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(false)\r\n\r\n    //console.log(state)\r\n\r\n    const fetchMovies = async endpoint => {\r\n        setError(false)\r\n        setLoading(true)\r\n\r\n        const isLoadMore = endpoint.search('page')\r\n\r\n        try {\r\n            const result = await (await fetch(endpoint)).json();\r\n            setstate(prev => ({\r\n                ...prev,\r\n                movies:\r\n                    isLoadMore !== -1\r\n                        ? [...prev.movies, ...result.results]\r\n                        : [...result.results],\r\n                HeroImage: prev.HeroImage || result.results[0],\r\n                currentPage: result.page,\r\n                totalPages: result.total_pages\r\n            }))\r\n\r\n        } catch (error) {\r\n            setError(true)\r\n            console.log(error)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (sessionStorage.homeState) {\r\n            console.log(\"grabbed session\")\r\n            setstate(JSON.parse(sessionStorage.homeState))\r\n            setLoading(false)\r\n        } else {\r\n            console.log(\"grabbed API\")\r\n            fetchMovies(`${POPLAR_BASE_URL}`)\r\n        }\r\n    }, [])\r\n    useEffect(() => {\r\n        if (!SearchTerm) {\r\n            console.log(\"writing to session storage\")\r\n            sessionStorage.setItem('homeState', JSON.stringify(state))\r\n        }\r\n    }, [SearchTerm, state])\r\n    return [{ state, error, loading }, fetchMovies]\r\n}\r\n\r\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledNavigation = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 70px;\n  background: #353535;\n  color: #fff;\n\n  .navigation-content {\n    max-width: 1280px;\n    margin: 0 auto;\n    padding: 0 20px;\n    width: 100%;\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 22px;\n      float: left;\n      color: #fff;\n      padding-right: 10px;\n      text-decoration: none;\n\n      @media screen and (max-width: 768px) {\n        font-size: 16px;\n      }\n    }\n  }\n`;\n","import React from \"react\"\r\nimport { Link } from \"@reach/router\"\r\nimport { StyledNavigation } from \"../styles/StyledNavigation\"\r\n\r\nconst Navigation = ({ movie }) =>\r\n    (\r\n        <StyledNavigation>\r\n            <div className=\"navigation-content\">\r\n                <Link to=\"/\">\r\n                    <p>Home</p>\r\n                </Link>\r\n                <p>|</p>\r\n                <p>{movie}</p>\r\n            </div>\r\n\r\n\r\n        </StyledNavigation>\r\n\r\n\r\n    )\r\n\r\nexport default Navigation","import styled from 'styled-components';\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from '../../config';\n\nexport const StyledMovieInfo = styled.div`\n  background: ${props =>\n    props.backdrop\n      ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.backdrop}')`\n      : '#000'};\n  background-size: cover !important;\n  background-position: center !important;\n  width: 100%;\n  padding: 40px 20px;\n  box-sizing: border-box;\n  animation: animateMovieinfo 1s;\n\n  .movieinfo-content {\n    max-width: 1280px;\n    min-height: 450px;\n    margin: 0 auto;\n    background: rgb(0, 0, 0, 0.7);\n    border-radius: 20px;\n    position: relative;\n  }\n\n  .movieinfo-thumb {\n    width: 300px;\n    float: left;\n\n    @media screen and (max-width: 768px) {\n      width: 100% !important;\n    }\n  }\n\n  .movieinfo-text {\n    font-family: Arial, Helvetica, sans-serif;\n    padding: 40px;\n    color: #fff;\n    overflow: hidden;\n\n    h1 {\n      font-family: 'Abel', sans-serif;\n      font-size: 48px;\n      margin: 0;\n\n      @media screen and (max-width: 1000px) {\n        font-size: 32px !important;\n      }\n    }\n\n    h3 {\n      font-size: 16px;\n      line-height: 0;\n      margin-top: 30px;\n    }\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 18px;\n      line-height: 26px;\n    }\n  }\n\n  .rating-director {\n    display: flex;\n    justify-content: flex-start;\n  }\n\n  .score {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 35px;\n    height: 35px;\n    background: #fff;\n    color: #000;\n    font-weight: 800;\n    border-radius: 25px;\n    margin: 0px 0 0 0;\n  }\n\n  .director {\n    margin: 0 0 0 40px;\n\n    p {\n      margin: 0;\n    }\n  }\n\n  @media screen and (max-width: 768px) {\n    min-height: 600px;\n    height: auto;\n  }\n\n  @keyframes animateMovieinfo {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","import React from \"react\"\r\nimport NoImage from \"../images/no_image.jpg\"\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config'\r\nimport MovieThumb from \"./MovieThumb\"\r\nimport { StyledMovieInfo } from \"../../components/styles/StyledMovieInfo\"\r\n\r\n\r\nconst MovieInfo = ({ movie }) => (\r\n    <StyledMovieInfo backdrop={movie.backdrop_path}>\r\n        <div className=\"movieinfo-content\">\r\n            <div className=\"movieinfo-thumb\">\r\n                <MovieThumb\r\n                    image={\r\n                        movie.poster_path\r\n                            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n                            : NoImage\r\n                    }\r\n                    clickable={false}\r\n                />\r\n            </div>\r\n            <div className=\"movieinfo-text\">\r\n                <h1>{movie.title}</h1>\r\n                <h3>PLOT</h3>\r\n                <p>{movie.overview}</p>\r\n\r\n                <div className=\"rating-director\">\r\n                    <div>\r\n                        <h3>IMDB RATING</h3>\r\n                        <div className=\"score\">{movie.vote_average}</div>\r\n                    </div>\r\n\r\n                    <div className=\"director\">\r\n                        <h3>DIRECTOR{movie.directors.length > 1 ? 's' : ''}</h3>\r\n                        {movie.directors.map(element => (\r\n                            <p key={element.credit_id}>{element.name}</p>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </StyledMovieInfo>\r\n)\r\n\r\nexport default MovieInfo","import styled from 'styled-components';\n\nexport const StyledActor = styled.div`\n  font-family: 'Abel', sans-serif;\n  color: #fff;\n  background: #1c1c1c;\n  border-radius: 20px;\n  padding: 5px;\n  text-align: center;\n\n  img {\n    display: block;\n    width: 100%;\n    height: 200px;\n    object-fit: cover;\n    border-radius: 15px;\n  }\n\n  .actor-name {\n    display: block;\n    font-size: 18px;\n    margin: 10px 0 0 0;\n  }\n\n  .actor-character {\n    display: block;\n    font-size: 16px;\n    margin: 0 0 10px 0;\n  }\n`;\n","import React from \"react\"\r\nimport NoImage from \"../images/no_image.jpg\"\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config'\r\nimport { StyledActor } from \"../../components/styles/StyledActor\"\r\n\r\nconst Actors = ({ actor }) => (\r\n    <StyledActor>\r\n        <img src={\r\n            actor.profile_path\r\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\r\n                : NoImage\r\n        }\r\n            alt=\"actorthumb\"\r\n        />\r\n        <span className=\"actor-name\">{actor.name} </span>\r\n        <span className=\"actor-character\">{actor.character}</span>\r\n    </StyledActor>\r\n)\r\n\r\nexport default Actors","// Convert time to hours and minutes\nexport const calcTime = time => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = money => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n","import styled from 'styled-components';\n\nexport const StyledMovieInfoBar = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  min-height: 100px;\n  height: auto;\n  background: #1c1c1c;\n  padding: 20px;\n  box-sizing: border-box;\n  font-family: 'Abel', sans-serif;\n  font-size: 20px;\n\n  .movieinfobar-content {\n    max-width: 1280px;\n    width: 100%;\n    margin: 0 auto;\n    color: #fff;\n  }\n\n  .movieinfobar-content-col {\n    float: left;\n    width: 33.33%;\n    box-sizing: border-box;\n    padding: 10px 20px 0 0;\n  }\n\n  .movieinfobar-info {\n    padding: 5px 0 0 10px;\n    float: left;\n  }\n\n  .fa-time,\n  .fa-revenue {\n    float: left;\n    margin-top: -4px;\n  }\n\n  .fa-budget {\n    float: left;\n    margin-top: -3px;\n  }\n\n  @media screen and (max-width: 768px) {\n    .fa-time,\n    .fa-revenue,\n    .fa-budget {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 425px) {\n    font-size: 14px;\n  }\n`;\n","import React from \"react\"\r\nimport FontAwesome from \"react-fontawesome\"\r\nimport { calcTime, convertMoney } from \"../../helpers\"\r\nimport { StyledMovieInfoBar } from \"../../components/styles/StyledMovieInfoBar\"\r\n\r\n\r\n\r\nconst MovieInfoBar = ({ time, budget, revenue }) =>\r\n\r\n    <StyledMovieInfoBar>\r\n        <div className=\"movieinfobar-content\">\r\n            <div className=\"movieinfobar-content-col\">\r\n                <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" />\r\n                <span className=\"movieinfobar-info\">\r\n                    Running Time:{calcTime(time)}\r\n                </span>\r\n\r\n            </div>\r\n            <div className=\"movieinfobar-content-col\">\r\n                <FontAwesome className=\"fa-budget\" name=\"money\" size=\"2x\" />\r\n                <span className=\"movieinfobar-info\">\r\n                    Budget:{convertMoney(budget)}\r\n                </span>\r\n\r\n            </div>\r\n            <div className=\"movieinfobar-content-col\">\r\n                <FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\" />\r\n                <span className=\"movieinfobar-info\">\r\n                    Revenue:{convertMoney(revenue)}\r\n                </span>\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n    </StyledMovieInfoBar>\r\n\r\n\r\nexport default MovieInfoBar","import React from \"react\"\r\n\r\n//components\r\n\r\nimport Navigation from \"./elements/Navigation\"\r\nimport MovieInfo from \"./elements/MovieInfo\"\r\nimport Actors from \"./elements/Actors\"\r\nimport MovieInfoBar from \"./elements/MovieInfoBar\"\r\nimport Grid from \"./elements/Grid\"\r\nimport Spinner from \"./elements/Spinner\"\r\nimport { useMovieFetch } from \"../components/hookes/useMovieFetch\"\r\n\r\nconst Movie = ({ movieId }) => {\r\n\r\n    const [movie, loading, error] = useMovieFetch(movieId)\r\n    console.log(movie)\r\n    if (error) return <div>Whoooops..something went wrong</div>\r\n\r\n    if (loading) return <Spinner />\r\n    return (\r\n        <>\r\n            <Navigation movie={movie.original_title} />\r\n            <MovieInfo movie={movie} />\r\n            <MovieInfoBar\r\n                time={movie.runtime}\r\n                budget={movie.budget}\r\n                revenue={movie.revenue}\r\n            />\r\n            <Grid header=\"Actors\">\r\n                {movie.actors.map(actor=>(\r\n                    <Actors\r\n                    key={actor.credit_id}\r\n                    actor={actor} />\r\n                ))}\r\n\r\n\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Movie ","import { useState, useEffect, useCallcack, useCallback } from \"react\"\r\nimport { API_URL, API_KEY } from \"../../config\"\r\n\r\nexport const useMovieFetch = movieId => {\r\n    const [state, setstate] = useState({})\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState(false)\r\n\r\n    const fetchData = useCallback(async () => {\r\n        setError(false)\r\n        setLoading(true)\r\n        try {\r\n            const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`\r\n            const result = await (await fetch(endpoint)).json()\r\n            const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`\r\n            const creditsReults = await (await fetch(creditsEndpoint)).json()\r\n            const directors = creditsReults.crew.filter(member => member.job === 'Director')\r\n            setstate({\r\n                ...result,\r\n                actors: creditsReults.cast,\r\n                directors\r\n            })\r\n\r\n\r\n        } catch (error) {\r\n            setError(true)\r\n            console.log(error)\r\n        }\r\n        setLoading(false)\r\n    }, [movieId])\r\n    useEffect(() => {\r\n        if (localStorage[movieId]) {\r\n            console.log(\"locla grab\")\r\n            setstate(JSON.parse(localStorage[movieId]))\r\n            setLoading(false)\r\n        } else {\r\n            console.log(\"API grab\")\r\n            fetchData()\r\n\r\n        }\r\n    }, [fetchData, movieId])\r\n    useEffect(() => {\r\n        localStorage.setItem(movieId, JSON.stringify(state))\r\n    }, [movieId, state])\r\n    return [state, loading, error]\r\n}","import React from \"react\"\r\n\r\nconst NotFound = () => <div>Whoooooops...Nothing found here</div>\r\n\r\nexport default NotFound","import React from 'react';\nimport Header from './elements/Header'\nimport Home from \"./Home\"\nimport { GlobalStyle } from \"./styles/GlobalStyle\"\nimport {Router} from \"@reach/router\"\nimport Movie from \"./Movie\"\nimport NotFound from './NotFound'\n\nconst App = () => (\n    <div>\n        <Header />\n        <Router>\n            <Home path=\"/\" />\n            <Movie path=\"/:movieId\" />\n            <NotFound default/>\n        </Router>\n        <GlobalStyle />\n    </div>\n)\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/no_image.31f5bb1d.jpg\";"],"sourceRoot":""}